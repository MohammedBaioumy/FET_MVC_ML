@model dynamic

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                @foreach (var header in ViewData["Headers"] as string[])
                {
                    <th scope="col">@header</th>
                }
            </tr>
        </thead>
        <tbody>
            @RenderBody()
        </tbody>
    </table>
</div>

@if (ViewData["ShowPagination"] != null && (bool)ViewData["ShowPagination"])
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewData["CurrentPage"].Equals(1) ? "disabled" : "")">
                <a class="page-link" href="@ViewData["PreviousPageUrl"]" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @{
                int totalPages = (int)ViewData["TotalPages"];
                int currentPage = (int)ViewData["CurrentPage"];
                string baseUrl = ViewData["BaseUrl"].ToString();

                for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@(baseUrl + "?page=" + i)">@i</a>
                    </li>
                }
            }
            <li class="page-item @(ViewData["CurrentPage"].Equals(ViewData["TotalPages"]) ? "disabled" : "")">
                <a class="page-link" href="@ViewData["NextPageUrl"]" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
} 