<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FET Scheduler</title>

    <!-- CSS Links -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FET_MVCforTest.styles.css" asp-append-version="true" />
    <link href="~/css/StyleSheet.css" rel="stylesheet" />

</head>
<body>
    <header>
        <partial name="_NavbarPartial" />
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <partial name="_FooterPartial" />

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeToggle = document.getElementById('theme-toggle');
            const themeLabel = document.getElementById('theme-label');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');

            // Initialize theme
            const savedTheme = localStorage.getItem('theme');
            const initialTheme = savedTheme || (prefersDark.matches ? 'dark' : 'light');

            if (initialTheme === 'dark') {
                document.body.classList.add('dark-mode');
                themeToggle.checked = true;
                themeLabel.textContent = '🌙';
            }

            // Theme toggle event
            themeToggle.addEventListener('change', () => {
                if (themeToggle.checked) {
                    document.body.classList.add('dark-mode');
                    themeLabel.textContent = '🌙';
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.body.classList.remove('dark-mode');
                    themeLabel.textContent = '🌞';
                    localStorage.setItem('theme', 'light');
                }
            });

            // Listen for system theme changes
            prefersDark.addEventListener('change', (e) => {
                if (!localStorage.getItem('theme')) {
                    if (e.matches) {
                        document.body.classList.add('dark-mode');
                        themeToggle.checked = true;
                        themeLabel.textContent = '🌙';
                    } else {
                        document.body.classList.remove('dark-mode');
                        themeToggle.checked = false;
                        themeLabel.textContent = '🌞';
                    }
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>