@{
    ViewBag.Title = "Dashboard";
}

<div class="container mt-5 px-4">
    @if (TempData["Operation"] != null)
    {
        <partial name="View"></partial>
    }
    <!-- Header -->
    <div class="d-flex justify-content-center align-items-center mb-5">
        <h1 class="display-5 fw-bold justify-content-center text-primary dark-text-light">Table Management Dashboard</h1>
    </div>

    <!-- Cards Grid -->
    <div class="row g-4">
        <!-- Basic Settings -->
        <div class="col-md-4">
            <div class="dashboard-card card-basic">
                <i class="bi bi-gear-wide-connected icon"></i>
                <h5>Basic Settings</h5>
                <a href="@Url.Action("Index", "Basic")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Faculties -->
        <div class="col-md-4">
            <div class="dashboard-card card-faculty">
                <i class="bi bi-mortarboard-fill icon"></i>
                <h5>Faculties</h5>
                <a href="@Url.Action("Index", "Faculty")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Departments -->
        <div class="col-md-4">
            <div class="dashboard-card card-department">
                <i class="bi bi-diagram-3-fill icon"></i>
                <h5>Departments</h5>
                <a href="@Url.Action("Index", "Department")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Subjects -->
        <div class="col-md-4">
            <div class="dashboard-card card-subject">
                <i class="bi bi-book-half icon"></i>
                <h5>Subjects</h5>
                <a href="@Url.Action("Index", "Subject")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Teachers -->
        <div class="col-md-4">
            <div class="dashboard-card card-teacher">
                <i class="bi bi-person-gear icon"></i>
                <h5>Teachers</h5>
                <a href="@Url.Action("Index", "Teacher")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Student Groups -->
        <div class="col-md-4">
            <div class="dashboard-card card-group">
                <i class="bi bi-people icon"></i>
                <h5>Student Groups</h5>
                <a href="@Url.Action("Index", "StudentsGroup")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Rooms -->
        <div class="col-md-4">
            <div class="dashboard-card card-room">
                <i class="bi bi-building-fill icon"></i>
                <h5>Rooms</h5>
                <a href="@Url.Action("Index", "Room")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Activities -->
        <div class="col-md-4">
            <div class="dashboard-card card-activity">
                <i class="bi bi-calendar-check-fill icon"></i>
                <h5>Activities</h5>
                <a href="@Url.Action("Index", "Activity")" class="stretched-link"></a>
            </div>
        </div>
        <!-- Constraints -->
        <div class="col-md-4">
            <div class="dashboard-card card-constraint">
                <i class="bi bi-shield-lock-fill icon"></i>
                <h5>Constraints</h5>
                <a href="@Url.Action("Index", "Constraints")" class="stretched-link"></a>
            </div>
        </div>
    </div>

    <!-- Timetable Buttons -->
    <div class="text-center mt-5 d-flex justify-content-center flex-wrap gap-4">
        <button id="resetBtn" class="btn-timetable reset">
            <i class="bi bi-arrow-counterclockwise me-2"></i> Reset Dashboard
        </button>
        <a href="@Url.Action("Loading", "Gemini")" class="btn-timetable generate">
            <i class="bi bi-cpu-fill me-2"></i> Generate Timetable
        </a>
    </div>
</div>

<!-- Reset Confirmation Modal -->
<div class="modal fade" id="resetModal" tabindex="-1" aria-labelledby="resetModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="resetModalLabel">Confirm Reset</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to reset all dashboard data? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
               @*  <button type="button" id="confirmReset" class="btn btn-danger">Reset Data</button> *@
                <form asp-action="ResetDashboard" asp-controller="Gemini" >
                    <button type="submit" id="confirmReset" class="btn btn-danger">
                        <i class="bi bi-trash-fill me-1"></i> Confirm Reset
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* Base Styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f8f9fa;
        color: #212529;
        transition: all 0.3s ease;
    }

        body.dark {
            background-color: #1a1a1a;
            color: #e0e0e0;
        }

    /* Cards */
    .dashboard-card {
        position: relative;
        background-color: #ffffff;
        border-radius: 1rem;
        padding: 2rem;
        text-align: center;
        transition: all 0.4s ease;
        overflow: hidden;
        border: none;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    body.dark .dashboard-card {
        background-color: #242424;
        border: 1px solid #3a3a3a;
    }

    .dashboard-card:hover {
        transform: translateY(-15px) scale(1.05);
    }

    /* Card Shadows */
    .card-basic {
        box-shadow: 0 8px 20px rgba(108, 117, 125, 0.25);
    }

    .card-faculty {
        box-shadow: 0 8px 20px rgba(13, 110, 253, 0.25);
    }

    .card-department {
        box-shadow: 0 8px 20px rgba(25, 135, 84, 0.25);
    }

    .card-subject {
        box-shadow: 0 8px 20px rgba(111, 66, 193, 0.25);
    }

    .card-teacher {
        box-shadow: 0 8px 20px rgba(32, 201, 151, 0.25);
    }

    .card-group {
        box-shadow: 0 8px 20px rgba(102, 16, 242, 0.25);
    }

    .card-room {
        box-shadow: 0 8px 20px rgba(253, 126, 20, 0.25);
    }

    .card-activity {
        box-shadow: 0 8px 20px rgba(220, 53, 69, 0.25);
    }

    .card-constraint {
        box-shadow: 0 8px 20px rgba(255, 193, 7, 0.25);
    }

    body.dark .card-basic {
        box-shadow: 0 8px 25px rgba(173, 181, 189, 0.35);
    }

    body.dark .card-faculty {
        box-shadow: 0 8px 25px rgba(77, 171, 247, 0.35);
    }

    body.dark .card-department {
        box-shadow: 0 8px 25px rgba(81, 207, 102, 0.35);
    }

    body.dark .card-subject {
        box-shadow: 0 8px 25px rgba(151, 117, 250, 0.35);
    }

    body.dark .card-teacher {
        box-shadow: 0 8px 25px rgba(61, 249, 176, 0.35);
    }

    body.dark .card-group {
        box-shadow: 0 8px 25px rgba(132, 94, 247, 0.35);
    }

    body.dark .card-room {
        box-shadow: 0 8px 25px rgba(255, 158, 67, 0.35);
    }

    body.dark .card-activity {
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.35);
    }

    body.dark .card-constraint {
        box-shadow: 0 8px 25px rgba(255, 224, 102, 0.35);
    }

    /* Icons */
    .icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        transition: color 0.3s;
    }

    .card-basic .icon {
        color: #6c757d;
    }

    .card-faculty .icon {
        color: #0d6efd;
    }

    .card-department .icon {
        color: #198754;
    }

    .card-subject .icon {
        color: #6f42c1;
    }

    .card-teacher .icon {
        color: #20c997;
    }

    .card-group .icon {
        color: #6610f2;
    }

    .card-room .icon {
        color: #fd7e14;
    }

    .card-activity .icon {
        color: #dc3545;
    }

    .card-constraint .icon {
        color: #ffc107;
    }

    body.dark .card-basic .icon {
        color: #adb5bd;
    }

    body.dark .card-faculty .icon {
        color: #4dabf7;
    }

    body.dark .card-department .icon {
        color: #69db7c;
    }

    body.dark .card-subject .icon {
        color: #9775fa;
    }

    body.dark .card-teacher .icon {
        color: #3df9b0;
    }

    body.dark .card-group .icon {
        color: #845ef7;
    }

    body.dark .card-room .icon {
        color: #ff922b;
    }

    body.dark .card-activity .icon {
        color: #ff6b6b;
    }

    body.dark .card-constraint .icon {
        color: #ffd43b;
    }

    /* Text */
    .dashboard-card h5 {
        font-weight: 600;
        margin: 0;
        color: inherit;
    }

    .dark-text-light {
        color: #f8f9fa;
    }

    body.dark .dark-text-light {
        color: #ffffff;
    }

    /* Link */
    .stretched-link::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1;
    }

    /* Buttons */
    .btn-timetable {
        display: inline-flex;
        align-items: center;
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 2rem;
        text-decoration: none;
        border: none;
        transition: all 0.4s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }

        .btn-timetable.generate {
            background-color: #0d6efd;
            color: #fff;
        }

        .btn-timetable.reset {
            background-color: #dc3545;
            color: #fff;
            animation: pulse 2s infinite;
        }

        .btn-timetable.view {
            background-color: #198754;
            color: #fff;
        }

        .btn-timetable:hover {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

    body.dark .btn-timetable.generate {
        background-color: #4dabf7;
        color: #1a1a1a;
    }

    body.dark .btn-timetable.reset {
        background-color: #ff6b6b;
        color: #1a1a1a;
    }

    body.dark .btn-timetable.view {
        background-color: #69db7c;
        color: #1a1a1a;
    }

    /* Modal Styles */
    .modal-content {
        border-radius: 1rem;
        border: none;
        overflow: hidden;
    }

    body.dark .modal-content {
        background-color: #242424;
        color: #e0e0e0;
    }

    body.dark .modal-header {
        border-bottom: 1px solid #3a3a3a;
    }

    body.dark .modal-footer {
        border-top: 1px solid #3a3a3a;
    }

    body.dark .btn-close {
        filter: invert(1);
    }

    /* Animation */
    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
        }
    }

    body.dark @@keyframes pulse {
        0%

    {
        box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.7);
    }

    70% {
        box-shadow: 0 0 0 10px rgba(255, 107, 107, 0);
    }

    100% {
        box-shadow: 0 0 0 0 rgba(255, 107, 107, 0);
    }

    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .dashboard-card {
            padding: 1.5rem;
        }

        .icon {
            font-size: 2rem;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Dark Mode Toggle
    const themeToggle = document.getElementById('theme-toggle');
    const body = document.body;
    const themeIcon = themeToggle?.querySelector('i');

    // Check for saved theme preference
    if (localStorage.getItem('theme') === 'dark') {
        body.classList.add('dark');
        if (themeIcon) {
            themeIcon.classList.replace('bi-moon-stars-fill', 'bi-sun-fill');
        }
    }

    // Theme toggle functionality
    if (themeToggle) {
        themeToggle.addEventListener('click', () => {
            body.classList.toggle('dark');
            if (themeIcon) {
                themeIcon.classList.toggle('bi-moon-stars-fill');
                themeIcon.classList.toggle('bi-sun-fill');
            }
            localStorage.setItem('theme', body.classList.contains('dark') ? 'dark' : 'light');
        });
    }

    // Card hover effects
    document.querySelectorAll('.dashboard-card').forEach(card => {
        card.addEventListener('mouseenter', () => {
            card.style.transform = 'translateY(-15px) scale(1.05)';
        });

        card.addEventListener('mouseleave', () => {
            card.style.transform = '';
        });
    });

    // Reset Modal Functionality
    document.addEventListener('DOMContentLoaded', function () {
        const resetBtn = document.getElementById('resetBtn');
        const resetModal = new bootstrap.Modal(document.getElementById('resetModal'));
        const confirmResetBtn = document.getElementById('confirmReset');

        resetBtn.addEventListener('click', function () {
            resetModal.show();
        });

        confirmResetBtn.addEventListener('click', function () {
            // Perform the reset action
            fetch('@Url.Action("ResetDashboard", "Gemini")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                if (data.success) {
                    // Show success message
                    alert('Dashboard data has been reset successfully!');
                    // Optionally refresh the page
                    window.location.reload();
                } else {
                    alert('Error resetting data: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while resetting the dashboard data.');
            })
            .finally(() => {
                resetModal.hide();
            });
        });
    });
</script>